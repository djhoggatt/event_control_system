/// @file mutex.cpp
/// @author Denver Hoggatt
/// @brief Mutex definitions.
///
/// Copyright (c) 2025 Denver Hoggatt. All rights reserved.
///
/// This software is licensed under terms that can be found in the LICENSE file
/// in the root directory of this software component.
/// If no LICENSE file comes with this software, it is provided AS-IS.
///

#include "mutex.hpp"
#include "mutex_osal.hpp"
#include "error.hpp"

//--------------------------------------------------------------------------------------------------
//  Macros and Error Checking
//--------------------------------------------------------------------------------------------------

namespace
{
    //----------------------------------------------------------------------------------------------
    //  Private Constants
    //----------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------
    //  Private Data Types
    //----------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------
    //  Private Function Prototypes
    //----------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------
    //  File Variables
    //----------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------
    //  Private Functions
    //----------------------------------------------------------------------------------------------


    // End of Anonymous Namespace
}

namespace mutex
{
    //----------------------------------------------------------------------------------------------
    //  Public Functions
    //----------------------------------------------------------------------------------------------

    /// @brief Mutex take.
    /// @param id ID of the mutex.
    ///
    void take(ID id)
    {
        REQUIRE(id < ID::NumIDs, error::InvalidIndex);

        error::Error err_val = mutex_osal::take(static_cast<uint32_t>(id));

        ENSURE(err_val == error::NoError, err_val);
    }

    /// @brief Mutex give.
    /// @param id ID of the mutex.
    ///
    void give(ID id)
    {
        REQUIRE(id < ID::NumIDs, error::InvalidIndex);

        error::Error err_val = mutex_osal::give(static_cast<uint32_t>(id));

        ENSURE(err_val == error::NoError, err_val);
    }

    //----------------------------------------------------------------------------------------------
    //  Class Function Definitions
    //----------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------
    //  Class Operator Definitions
    //----------------------------------------------------------------------------------------------


    //----------------------------------------------------------------------------------------------
    //  Class Constructor Definitions
    //----------------------------------------------------------------------------------------------


    // End of Namespace
}

//--------------------------------------------------------------------------------------------------
// Global Namespace Functions
//--------------------------------------------------------------------------------------------------


//--------------------------------------------------------------------------------------------------
// Unit Test Accessors
//--------------------------------------------------------------------------------------------------

namespace mutex_test
{


}

// End of File